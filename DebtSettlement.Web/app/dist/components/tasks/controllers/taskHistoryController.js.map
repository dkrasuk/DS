{"version":3,"sources":["../../../../src/components/tasks/controllers/taskHistoryController.js"],"names":["app","components","tasks","history","global","$","utils","tasksService","$table","historyTable","htmlHelpers","helpers","parseDate","date","format","getStateLabel","value","generateLabelClassByStatus","form","parent","id","data","parseUrlParams","document","location","href","DataTable","ajax","url","urlContent","dataSrc","complete","beforeSend","language","select","init","columns","title","name","render","order","bindParametersHtml","params","block","FromStateName","TransitionTime","ExecutorIdentityFullName","ExecutorIdentityId","ToStateName","result","Parameters","length","i","LocalizedName","Value","showParametersWindow","taskId","historyId","getHistoryItem","then","ui","dialog","content","error","text","on","row","ProcessId","Id","window","jQuery","services"],"mappings":"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","file":"taskHistoryController.js","sourcesContent":["﻿; var app = app || {};\r\napp.components = app.components || {};\r\napp.components.tasks = app.components.tasks || {};\r\napp.components.tasks.history = (function (global, $, app, utils, tasksService) {\r\n    var $table;\r\n    var historyTable;\r\n\r\n    var htmlHelpers = app.components.tasks.helpers.htmlHelpers;\r\n    function parseDate(date) {\r\n        return $.format.date(date, 'dd.MM.yyyy HH:mm:ss');\r\n    }\r\n\r\n    function getStateLabel(value) {\r\n        return '<span data-toggle=\"tooltip\"\\\r\n                      class=\"' + htmlHelpers.generateLabelClassByStatus(value) + '\">\\\r\n                     ' + value + '\\\r\n               </span>';\r\n    }\r\n\r\n    $(function () { \r\n        var form = $('[ng-controller=TaskHistoryController]').parent();\r\n        var id = form.data('task-id') || utils.parseUrlParams(global.document.location.href).id;\r\n\r\n        $table = $('#taskHistoryTable');\r\n        //$table.on('processing.dt', function () { bindTableActions(); });\r\n        historyTable = $table.DataTable({\r\n            ajax: {\r\n                url: utils.urlContent('/api/tasks/' + id + '/history'),\r\n                dataSrc: '',\r\n                complete: function () {\r\n                    //utils.ui.loader('#table-tasks', false);\r\n                },\r\n                beforeSend: function () {\r\n                    //utils.ui.loader('#table-tasks');\r\n                }\r\n            },\r\n            language: {\r\n                \"processing\": \"Loading ...\",\r\n                \"search\": \"Поиск:\",\r\n                \"lengthMenu\": \"Показать _MENU_ записей\",\r\n                \"info\": \"Записи с _START_ до _END_ из _TOTAL_ записей\",\r\n                \"infoEmpty\": \"Записи с 0 до 0 из 0 записей\",\r\n                \"infoFiltered\": \"(отфильтровано из _MAX_ записей)\",\r\n                \"infoPostFix\": \"\",\r\n                \"loadingRecords\": \"Загрузка записей...\",\r\n                \"zeroRecords\": \"Записи отсутствуют.\",\r\n                \"emptyTable\": \"В таблице отсутствуют данные\",\r\n                \"paginate\": {\r\n                    \"first\": \"Первая\",\r\n                    \"previous\": \"Предыдущая\",\r\n                    \"next\": \"Следующая\",\r\n                    \"last\": \"Последняя\"\r\n                },\r\n                \"aria\": {\r\n                    \"sortAscending\": \": активировать для сортировки столбца по возрастанию\",\r\n                    \"sortDescending\": \": активировать для сортировки столбца по убыванию\"\r\n                }\r\n            },\r\n            select: true,\r\n            init: function () { },\r\n            columns: [{\r\n                title: 'Дата действия',\r\n                name: 'TransitionTime',\r\n                data: 'TransitionTime',\r\n                render: parseDate\r\n            }, {\r\n                title: 'Исполнитель',\r\n                name: 'ActorIdentityId',\r\n                data: 'ActorIdentityId'\r\n            }, {\r\n                title: 'Прошлое состояние',\r\n                name: 'FromStateName',\r\n                data: 'FromStateName',\r\n                render: function (value) {\r\n                    return getStateLabel(value);\r\n                }\r\n            }, {\r\n                title: 'Новое состояние',\r\n                name: 'ToStateName',\r\n                data: 'ToStateName',\r\n                render: function (value) {\r\n                    return getStateLabel(value);\r\n                }\r\n            }, {\r\n                title: 'Параметры',\r\n                name: 'Id',\r\n                data: 'Id',\r\n                render: function () {\r\n                    return '<div style=\"font-size:18px; text-align:center;\" title=\"показать параметры действия\">\\\r\n                                    <span class=\"glyphicon glyphicon-info-sign\"></span>\\\r\n                                </div>';\r\n                }\r\n            }],\r\n            order: [[0, 'desc']]\r\n        });\r\n\r\n        function bindParametersHtml(params) {\r\n            var block = '<div class=\"transition-and-state-container-main\">\\\r\n\t                        <div class=\"state-transition-graph-spacer\" style=\"width: 587px;\">\\\r\n\t                        \t<div class=\"transition-and-state-container\">\\\r\n\t                        \t\t<div class=\"state-container\">\\\r\n\t                        \t\t\t<div class=\"state\">\\\r\n                                            ' + getStateLabel(params.FromStateName) + '\\\r\n\t                        \t\t    </div>\\\r\n\t                        \t    </div>\\\r\n\t                            </div>\\\r\n\t                            <div class=\"transition-and-state-container\">\\\r\n\t                            \t<div class=\"transition-container\" style=\"width:300px\">\\\r\n\t                            \t\t<div class=\"transition-arrow\">\\\r\n\t                            \t\t\t<div class=\"arrow-tail\"></div>\\\r\n\t                            \t\t\t<div class=\"arrow-head\"></div>\\\r\n\t                            \t\t\t<div class=\"transition-reason\">' + parseDate(params.TransitionTime) + '</div>\\\r\n\t                            \t\t\t<div class=\"transition-change-info\">\\\r\n\t                            \t\t\t\t<div class=\"identity-view-control\" title=\"' + (params.ExecutorIdentityFullName || params.ExecutorIdentityId) + '\">\\\r\n\t                            \t\t\t\t\t<span>' + (params.ExecutorIdentityFullName || params.ExecutorIdentityId) + '</span>\\\r\n\t                            \t\t\t\t</div>\\\r\n\t                            \t\t\t\t<div class=\"transition-change-info-date\">' + parseDate(params.TransitionTime) + '</div>\\\r\n\t                            \t\t\t</div>\\\r\n\t                            \t\t</div>\\\r\n\t                            \t</div>\\\r\n\t                            \t<div class=\"state-container\">\\\r\n\t                            \t\t<div class=\"state\">\\\r\n                                            ' + getStateLabel(params.ToStateName) + '\\\r\n\t                        \t\t\t</div>\\\r\n\t                        \t\t</div>\\\r\n\t                        \t</div>\\\r\n\t                        </div>\\\r\n\t                        <div class=\"state-transition-graph-unused-host\"></div>\\\r\n                        </div>';\r\n\r\n\r\n\r\n\r\n            var result = block + '<form class=\"panel panel-default\" style=\"padding: 10px\">';\r\n            params.Parameters = params.Parameters || [];\r\n            if (params.Parameters.length > 0) {\r\n                for (var i = 0; i < params.Parameters.length; i++) {\r\n                    result += '<div class=\"form-group\"><label>';\r\n                    result += params.Parameters[i].LocalizedName + '</label>';\r\n                    result += '<span class=\"form-control\">' + (params.Parameters[i].Value || '') + '</span>';\r\n                    result += '</div>';\r\n                }\r\n            } else {\r\n                result += '<div class=\"form-group\"><label>Параметры отсутствуют</label></div>';\r\n            }\r\n            return result + '</form>';\r\n        }\r\n\r\n        function showParametersWindow(taskId, historyId) {\r\n            tasksService.getHistoryItem(taskId, historyId).then(\r\n                function (data) {\r\n                    utils.ui.dialog({\r\n                        title: 'Параметры вызова действия',\r\n                        content: bindParametersHtml(data)\r\n                    });\r\n                },\r\n                function () {\r\n                    utils.ui.error({ text: 'Ошибка загрузки данных.' });\r\n                }\r\n            );\r\n        }\r\n\r\n        $table.on('click', 'tr', function () {\r\n            var data = historyTable.row(this).data();\r\n            showParametersWindow(data.ProcessId, data.Id);\r\n        });\r\n\r\n    });\r\n}(window, jQuery, app, app.utils, app.components.tasks.services.tasksService));"]}